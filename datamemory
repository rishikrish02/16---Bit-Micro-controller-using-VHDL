library IEEE;
use IEEE.STD_LOGIC_1164.ALL; 
USE ieee.numeric_std.ALL;
entity Datamem16b is
generic ( N: integer := 3; M: integer := 16);
port(addDM:  in  std_logic_vector(N-1  downto  0);  --  Addressess  to  write/read dataDM: in std_logic_vector(2*M-1 downto 0); -- Data to write into memory
WE_DM: in std_logic; 
CLOCK: in std_logic; 
dataDM:  out  std_logic_vector  (2*M-1  downto  0)
);  
end Datamemory;
architecture behav of Datamem16b is
type MEM_ARRAY is array (0 to 2*M-1 ) of std_logic_vector (2*M-1 downto 0);
signal MEM: MEM_ARRAY :=(others=> (others=>'0'));
begin
process(CLOCK)
begin 
if(rising_edge(CLOCK)) then
if(WE_DM<='1') then -- when write enable = 1,
dataDM<=MEM(to_integer(unsigned(addDM)));
elsif (WE_DM<='0') then
dataDM <= MEM(to_integer(unsigned(addDM)));
end if;
end if;
end process;
end behav;
 

